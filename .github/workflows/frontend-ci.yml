name: Frontend CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Run linting
      run: npm run lint
      working-directory: frontend
      
    - name: Run type checking
      run: npm run build
      working-directory: frontend
      
    - name: Run unit tests
      run: npm test
      working-directory: frontend
      
  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Install Cypress
      run: npx cypress install
      working-directory: .
      
    - name: Setup DFX
      uses: dfinity/setup-dfx@main
      with:
        dfx-version: 0.15.0
        
    - name: Install Rust for WASM target
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        
    - name: Build canisters
      run: |
        dfx start --clean --background
        cargo build --release --target wasm32-unknown-unknown --all
        dfx deploy --all
      working-directory: backend
      
    - name: Start frontend dev server
      run: npm run dev &
      working-directory: frontend
      
    - name: Wait for frontend
      run: npx wait-on http://localhost:5173
      working-directory: frontend
      
    - name: Run Cypress tests
      run: npx cypress run
      working-directory: .
      
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: tests/e2e/screenshots
        
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: tests/e2e/videos

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Build for production
      run: npm run build
      working-directory: frontend
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-dist
        path: frontend/dist